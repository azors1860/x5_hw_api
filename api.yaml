openapi: 3.0.0

info:
  version: "1.0.0"
  title: "Pizza ordering app"

paths:
  /restaurant:
    get:
      tags:
      - "restaurant"
      summary: "List of all restaurants"
      description: "Returns all restaurants"
      operationId: "getAllRestaurants"
      responses:
        "200":
          description: "successful operation"

  /restaurant/{restaurantId}:
    get:
      tags:
      - "restaurant"
      summary: "Find restaurant by ID"
      description: "Returns a single restaurant"
      operationId: "getRestaurantById"
      parameters:
        - name: "restaurantId"
          in: path
          description: "ID of restaurant to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Restaurant"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Restaurant not found"
 
  /restaurant/{restaurantId}/menu:
    get:
      tags:
      - "menu"
      summary: "List of all short descriptions of dishes"
      description: "Returns all short descriptions"
      operationId: "getAllShortDescriptions"
      parameters:
        - name: "restaurantId"
          in: "path"
          description: "ID of restaurant to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Restaurant not found"  
      
  /restaurant/{restaurantId}/menu{dishId}:
    get:
      tags:
      - "menu"
      summary: "Find dish by restaurant Id and dish Id"
      description: "Returns full description dish"
      operationId: "getDescriptionDish"
      parameters:
        - name: "restaurantId"
          in: "path"
          description: "ID of restaurant to return"
          required: true
          schema:  
            type: "integer"
            format: "int64"
        - name: "dishId"
          in: "path"
          description: "ID of dish to return"
          required: true
          schema:  
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Restaurant not found"
    
          
  
  /order:
    post:
      tags:
        - "order"
      summary: "Create a new order"

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
              
      responses:
        "201":
          description: "Succesful creation"
        "405":
          description: "Validation exception"
          
          
  /order/{orderId}:
    get:
      tags:
      - "order"
      summary: "Find order by ID"
      description: "Returns a single order"
      operationId: "getOrder"
      parameters:
        - name: "orderId"
          in: "path"
          description: "ID of order to return"
          required: true
          schema:  
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Order not found"  
          
    put:
      tags:
      - "order"
      summary: "Cancel order"
      operationId: "cancelOrderStatus"
      parameters:
        - name: "orderId"
          in: "path"
          description: "ID of order to return"
          required: true
          schema:  
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid order supplied"
        "404":
          description: "Order not found"             
          
components:
  schemas:
    Restaurant:
      type: "object"
      required:
        - "phone"
        - "work_time"
      properties:
        id:
          type: "integer"
          format: "int64"
          readOnly: true
        address:
          type: "string"
          example: "Lenin street. House 2"
        work_time:
          type: "string"
          example: "09:00-24:00"
        phone:
          type: "string"
          example: "+7(495)114-755-62"
        menu:
          type: "array"
          items:
            $ref: "#/components/schemas/Menu"
        
  
    Menu:
      type: "object"
      required:
        - "nameDish"
        - "weight"
        - "briefDescription"
      properties:
        id:
          type: "integer"
          format: "int64"
          readOnly: true
        nameDish:
          type: "string"
          example: "Pizza Margherita"
        weight:
          type: "integer"
          format: "int64"
          example: "900"
        briefDescription:
          type: "string"
          example: "Dough with filling"
        detailedDescription:
          type: "string"
          example: "Pizza, made with San Marzano tomatoes, cheese, fresh basil, salt and extra-virgin olive oil."
      
    Order:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
          readOnly: true
        restaurant:
          $ref: "#/components/schemas/Restaurant"
  
        goods:
          type: "array"
          items:
            $ref: "#/components/schemas/Shopping_basket"
          
        delivery_address:
          type: "string"
        delivery_time:
          type: "string"
        buyer_name:
          type: "string"
        order_status:
          type: "string"
          example: "created / cancelled"
        delivery_status:
          type: "string"
          example: "delivered"
    
    Shopping_basket:
      type: "object"
      properties:
        menu:
          $ref: "#/components/schemas/Menu"
        quantity:
          type: "integer"
          format: "int64"
